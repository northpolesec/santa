module(name = "santa")

bazel_dep(name = "apple_support", version = "1.15.1", repo_name = "build_bazel_apple_support")
bazel_dep(name = "abseil-cpp", version = "20240116.2", repo_name = "com_google_absl")
bazel_dep(name = "rules_python", version = "0.33.2")
bazel_dep(name = "rules_cc", version = "0.0.13")
bazel_dep(name = "rules_apple", version = "3.16.1", repo_name = "build_bazel_rules_apple")
bazel_dep(name = "rules_swift", version = "2.1.1", repo_name = "build_bazel_rules_swift")
bazel_dep(name = "rules_fuzzing", version = "0.5.2")
bazel_dep(name = "protobuf", version = "29.0-rc1", repo_name = "com_google_protobuf")
bazel_dep(name = "googletest", version = "1.14.0.bcr.1", repo_name = "com_google_googletest")

# North Pole Protos
bazel_dep(name = "protos", version = "1.0.1", repo_name = "northpole_protos")
git_override(
    module_name = "protos",
    commit = "4840edae669a47173007c6d6e952a5a7e3ec55c3",
    remote = "https://github.com/northpolesec/protos",
)

# MOLCertificate
bazel_dep(name = "molcertificate", version = "2.1", repo_name = "MOLCertificate")
git_override(
    module_name = "molcertificate",
    commit = "34f0ccf68a34a07cc636ada89057c529f90bec3a",
    remote = "https://github.com/google/macops-molcertificate.git",
)

# MOLAuthenticatingURLSession
bazel_dep(name = "molauthenticatingurlsession", version = "3.0", repo_name = "MOLAuthenticatingURLSession")
git_override(
    module_name = "molauthenticatingurlsession",
    commit = "0a50a67f29d635a4012981714c1dedef9ac25fe6",
    remote = "https://github.com/google/macops-molauthenticatingurlsession.git",
)

# MOLCodesignChecker
bazel_dep(name = "molcodesignchecker", version = "3.0", repo_name = "MOLCodesignChecker")
git_override(
    module_name = "molcodesignchecker",
    commit = "5060bcc8baa90bae3b0ca705d14850328bbbec53",
    remote = "https://github.com/google/macops-molcodesignchecker.git",
)

# MOLXPCConnection
bazel_dep(name = "molxpcconnection", version = "2.1", repo_name = "MOLXPCConnection")
git_override(
    module_name = "molxpcconnection",
    commit = "bd75ae9329fe26197f50ceb84bc4932f706df573",
    remote = "https://github.com/google/macops-molxpcconnection.git",
)

# FMDB
non_module_deps = use_extension("//:non_module_deps.bzl", "non_module_deps")
use_repo(non_module_deps, "FMDB")
use_repo(non_module_deps, "OCMock")

# Hedron's Compile Commands Extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "0e990032f3c5a866e72615cf67e5ce22186dcb97",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
)

# Rust toolchain
# 0.55.0 - 0.56.0 are broken. Fix is in
# https://github.com/bazelbuild/rules_rust/pull/3142, which is not yet released.
#
# If you change this version, also update cxx.rs below to a version that depends
# on the matching rules_rust version.
bazel_dep(name = "rules_rust", version = "0.54.1")
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    versions = ["1.80.1"],
)
use_repo(rust, "rust_toolchains")
register_toolchains("@rust_toolchains//:all")

# Rust crates
crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")

# Crates are pinned in the root Cargo.lock, but dependencies can be declared
# locally. Each BUILD file that contains rust targets should have a Cargo.toml
# file to declare dependencies. This makes it possible to run tests quickly
# using cargo (which also enables inline support in IDEs like VSCode).
crate.from_cargo(
    name = "crate_index",
    cargo_lockfile = "//:Cargo.lock",
    manifests = [
        "//:Cargo.toml",

        # Keep this list in sync with the root Cargo.toml.
        "//:Source/santad/Logs/EndpointSecurity/ParquetLogger/Cargo.toml",
    ],
)
use_repo(crate, "crate_index")

# CXX bridge. Rust has a builtin FFI via C, but CXX makes it a lot easier to
# pass C++ types around.
bazel_dep(name="cxx.rs")
git_override(
    module_name = "cxx.rs",
    # If you change this version, also update the rules_rust version to the one
    # cxx uses.
    commit = "121bb6f8",
    remote = "https://github.com/dtolnay/cxx",
    patches = [
        # This patch makes cxx.rs explicitly request cc_rules. Once we upgrade
        # the cxx dependency to a new release, the patch can be removed.
        #
        # (cxx at HEAD depends on rules_rust 0.56.0 which is broken, so we can't
        # upgrade yet.)
        ":0001-cc_rules.cxx.rs.patch",
    ],
)
