module(name = "santa")

bazel_dep(name = "abseil-cpp", version = "20250127.1")
bazel_dep(name = "apple_support", version = "1.22.1")
bazel_dep(name = "cel-cpp", version = "0.12.0")
bazel_dep(name = "googletest", version = "1.17.0")
bazel_dep(name = "protobuf", version = "31.1")
bazel_dep(name = "rules_apple", version = "4.1.1")
bazel_dep(name = "rules_cc", version = "0.1.4")
bazel_dep(name = "rules_fuzzing", version = "0.6.0")
bazel_dep(name = "rules_rust", version = "0.61.0")
bazel_dep(name = "rules_shell", version = "0.5.0")
bazel_dep(name = "rules_swift", version = "2.9.0")
bazel_dep(name = "xxhash", version = "0.8.3")

# Load rules_rust dependencies needed for rednose.
# The edition/version must match what's needed by the dependency.
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2024",
    extra_target_triples = [
        "aarch64-apple-darwin",
        "x86_64-apple-darwin",
    ],
    versions = ["1.86.0"],
)
use_repo(rust, "rust_toolchains")

crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.from_cargo(
    name = "northpolesec_santa_crate_index",
    cargo_lockfile = "//:Cargo.lock",
    manifests = [
        "//:Cargo.toml",

        # Keep this list in sync with the root Cargo.toml.
        "//Source/santad:Cargo.toml",
    ],
)
use_repo(crate, "northpolesec_santa_crate_index")

# North Pole Protos
bazel_dep(name = "protos", version = "1.0.1", repo_name = "northpolesec_protos")
git_override(
    module_name = "protos",
    commit = "7086bc01ca96a9ac0893f9e757d91c70c1d6ec7c",
    remote = "https://github.com/northpolesec/protos",
)

# North Pole Rednose
bazel_dep(name = "rednose", version = "1.0.0", repo_name = "northpolesec_rednose")
git_override(
    module_name = "rednose",
    commit = "20358330121d997eee4ed2582f3741c3cccc2038",
    remote = "https://github.com/northpolesec/rednose",
)

# FMDB
non_module_deps = use_extension("//:non_module_deps.bzl", "non_module_deps")
use_repo(non_module_deps, "FMDB")
use_repo(non_module_deps, "OCMock")

# Hedron's Compile Commands Extractor
# Note: Moved to a fork because the original project's maintenance status is in limbo.
# The maintainer claims to still be around, but nothing is getting merged:
#   https://github.com/hedronvision/bazel-compile-commands-extractor/issues/232#issuecomment-2512931043
#   https://github.com/hedronvision/bazel-compile-commands-extractor/issues/240
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "f5fbd4cee671d8d908f37c83abaf70fba5928fc7",
    remote = "https://github.com/mikael-s-persson/bazel-compile-commands-extractor.git",
)
